#!/bin/bash -l

cat > /root/solve-install-python.yml << 'EOF'
---
- hosts: localhost
  vars:
    pyenv_bashrc_lines:
      - export PYENV_ROOT="$HOME/.pyenv"
      - export PATH="$PYENV_ROOT/bin:$PATH"
      - eval "$(pyenv init --path)"
      - eval "$(pyenv init -)"
    pyenv_build_dependencies:
      - bzip2
      - bzip2-devel
      - gcc
      - libffi-devel
      - make
      - openssl-devel
      - readline-devel
      - sqlite
      - sqlite-devel
      - tk-devel
      - xz-devel
      - zlib-devel
    pyenv_python_version: '3.9.7'
    pyenv_user: contributor
  tasks:
    - name: install git
      ansible.builtin.dnf:
        name: git
        state: present

    - name: check out pyenv
      ansible.builtin.git:
        repo: https://github.com/pyenv/pyenv.git
        dest: ~/.pyenv
      become: true
      become_user: "{{ pyenv_user }}"

    - name: add pyenv to bashrc
      ansible.builtin.lineinfile:
        path: ~/.bashrc
        line: "{{ line }}"
      become: true
      become_user: "{{ pyenv_user }}"
      loop: "{{ pyenv_bashrc_lines }}"
      loop_control:
        loop_var: line

    - name: install pyenv build dependencies
      ansible.builtin.dnf:
        name: "{{ package }}"
        state: present
      loop: "{{ pyenv_build_dependencies }}"
      loop_control:
        loop_var: package

    - name: install python {{ pyenv_python_version }}
      ansible.builtin.command:
        argv:
          - /bin/bash
          - -i
          - -c
          - pyenv install --skip-existing {{ pyenv_python_version }}
        creates: ~/.pyenv/versions/{{ pyenv_python_version }}
      become: true
      become_user: "{{ pyenv_user }}"

    - name: set python global version to {{ pyenv_python_version }}
      ansible.builtin.command:
        argv:
          - /bin/bash
          - -i
          - -c
          - pyenv global {{ pyenv_python_version }}
      become: true
      become_user: "{{ pyenv_user }}"

    - name: update python {{ pyenv_python_version }} pip to latest
      ansible.builtin.command:
        argv:
          - /bin/bash
          - -i
          - -c
          - pip install --upgrade pip
      become: true
      become_user: "{{ pyenv_user }}"
EOF

ansible-playbook /root/solve-install-python.yml
